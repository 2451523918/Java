package com.kuang.snake;

import javafx.scene.input.KeyCode;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.util.Random;

public class GamePanel extends JPanel implements KeyListener, ActionListener {
    //变量
    int lenth;
    int[]snakeX=new int[600];
    int[]snakeY=new int[600];
    String fx="L";//R：right，L：left,U:up,D:down
    boolean isStart=false;//判断游戏是否开始
    Timer timer=new Timer(100,this);//定时器
    //定义食物变量
    int foodx;
    int foody;
    Random random=new Random();
    //失败判断
    Boolean isFail=false;

    //积分
    int score;

    //构造器
    public GamePanel(){
        init();
        //获取键盘监听事件
        this.setFocusable(true);
        this.addKeyListener(this);
        timer.start();//让计时器动起来
    }
    //初始化
    public void init(){
        lenth=3;
        snakeX[0]=100;snakeY[0]=100;
        snakeX[1]=75;snakeY[1]=100;
        snakeX[2]=50;snakeY[2]=100;
        fx="R";
        foodx=25+25*random.nextInt(33);
        foody=75+25*random.nextInt(23);
        score=0;
    }

    //1.画界面，蛇  画板
    //Graphics:画笔
    @Override
    protected void paintComponent(Graphics g) {
        super.paintComponent(g);//清屏
        this.setBackground(Color.BLACK);//背景颜色

        //绘制头部栏
        Data.header.paintIcon(this,g,25,11);

        //绘制游戏区域
        g.fillRect(25,75,850,600);

        //绘制静态小蛇
        if(fx.equals("R")){
            Data.right.paintIcon(this,g,snakeX[0],snakeY[0]);
        }else if(fx.equals("L")){
            Data.left.paintIcon(this,g,snakeX[0],snakeY[0]);
        }else  if(fx.equals("U")){
            Data.up.paintIcon(this,g,snakeX[0],snakeY[0]);
        }else  if(fx.equals("D")){
            Data.dowm.paintIcon(this,g,snakeX[0],snakeY[0]);
        }

        for (int i=1;i<lenth;i++){
            Data.body.paintIcon(this,g,snakeX[i],snakeY[i]);
        }

        //画积分
        g.setColor(Color.white);
        g.setFont(new Font("宋体",Font.BOLD,18));
        g.drawString("长度:"+lenth,750,35);
        g.drawString("分数："+score,750,50);
        //食物
        Data.food.paintIcon(this,g,foodx,foody);
        //游戏开始提示
        if (isStart==false){
            //画String字符串
            g.setColor(Color.white);//画笔颜色
            g.setFont(new Font("宋体",Font.BOLD,40));
            g.drawString("按下空格，开始游戏",300,300);
        }
        //失败提示
        if (isFail){
            //画一个文字String
            g.setColor(Color.RED);
            g.setFont(new Font("宋体",Font.BOLD,40));
            g.drawString("游戏失败，按下空格重新开始",300,300);
        }

    }


    //接受键盘的输入：监听
    @Override
    public void keyPressed(KeyEvent e) {
        //获取键盘输入
        int keyCode=e.getKeyCode();
        if(keyCode==KeyEvent.VK_SPACE){//按下空格键
            if (isFail){//游戏失败
                isFail=false;
                init();//重新初始化游戏
            }else {//暂停游戏
                isStart=!isStart;
            }
            repaint();//重新绘制界面

        }
        //键盘控制走向
        if (keyCode==KeyEvent.VK_LEFT){
            fx="L";
        }else if (keyCode==KeyEvent.VK_RIGHT){
            fx="R";
        }else if (keyCode==KeyEvent.VK_UP){
            fx="U";
        }else if (keyCode==KeyEvent.VK_DOWN){
            fx="D";
        }


    }

    //定时器，监听时间，时间帧，执行定时操作
    @Override
    public void actionPerformed(ActionEvent e) {
        //游戏处于开始状态，并且没有结束
        if(isStart && isFail==false){
            //右移
            for(int i=lenth-1;i>0;i--){//除了脑袋，身体向前移动
                snakeX[i]=snakeX[i-1];
                snakeY[i]=snakeY[i-1];
            }
            //通过控制方向让头部移动
            if(fx.equals("R")){
                snakeX[0]=snakeX[0]+25;//头部移动
                //边界判断
                if(snakeX[0]>850){
                    snakeX[0]=25;
                }
            }else if (fx.equals("L")){
                snakeX[0]=snakeX[0]-25;
                if (snakeX[0]<25){
                    snakeX[0]=850;
                }
            }else if (fx.equals("U")){
                snakeY[0]=snakeY[0]-25;
                if (snakeY[0]<75){
                    snakeY[0]=650;
                }
            }else if (fx.equals("D")){
                snakeY[0]=snakeY[0]+25;
                if (snakeY[0]>650){
                    snakeY[0]=75;
                }
            }

            //如果小蛇头部和食物重合
            if (snakeX[0]==foodx && snakeY[0]==foody){
                lenth++;
                score+=10;
                foodx=25+25*random.nextInt(33);//随机生成新的食物
                foody=75+25*random.nextInt(23);
            }
            //身体重合，结束
            for (int i=1;i<lenth;i++){
                if (snakeX[0]==snakeX[i]&&snakeY[0]==snakeY[i]){
                    isFail=true;
                }
            }
            if (snakeX[0]==25||snakeY[0]==850){//撞到左右边界
                isFail=true;
            }
            if (snakeY[0]==75||snakeY[0]==650){//撞到上下边界
                isFail=true;
            }


            //刷新界面
            repaint();
        }
           timer.start();//让计时器动起来
    }














    @Override
    public void keyReleased(KeyEvent e) {
//弹起为一次操作
    }

    @Override
    public void keyTyped(KeyEvent e) {
        //按下，弹起为一次操作
    }


}
